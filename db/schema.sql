-- MySQL Script generated by MySQL Workbench
-- Tue Jan 18 14:16:08 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema taskforce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `taskforce` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `taskforce` ;

-- -----------------------------------------------------
-- Table `taskforce`.`cities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`cities` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `lat` VARCHAR(128) NOT NULL,
  `long` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `registered_at` DATETIME NOT NULL,
  `user_name` VARCHAR(128) NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `user_password` VARCHAR(128) NOT NULL,
  `is_performer` TINYINT NULL DEFAULT 0,
  `cities_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_users_cities1_idx` (`cities_id` ASC),
  CONSTRAINT `fk_users_cities1`
    FOREIGN KEY (`cities_id`)
    REFERENCES `taskforce`.`cities` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`categories` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `icon` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`statuses` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NOT NULL,
  `alias` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`profiles` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `birthday` DATE NULL,
  `phone` VARCHAR(11) NULL,
  `telegram` VARCHAR(64) NULL,
  `about` TEXT NULL,
  `count_fail` INT UNSIGNED NULL,
  `avatar_url` VARCHAR(2048) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_performers_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_performers_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `taskforce`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`tasks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` DATETIME NOT NULL,
  `title` VARCHAR(128) NOT NULL,
  `description` TEXT NOT NULL,
  `latitude` VARCHAR(128) NULL,
  `longitude` VARCHAR(128) NULL,
  `finance` INT NULL,
  `dedline` DATE NULL,
  `author_id` INT UNSIGNED NOT NULL,
  `category_id` INT UNSIGNED NOT NULL,
  `city_id` INT UNSIGNED NOT NULL,
  `status_id` INT UNSIGNED NOT NULL,
  `performer_id` INT UNSIGNED NULL,
  `address` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tasks_users1_idx` (`author_id` ASC),
  INDEX `fk_tasks_categories1_idx` (`category_id` ASC),
  INDEX `fk_tasks_cities1_idx` (`city_id` ASC),
  INDEX `fk_tasks_statuses1_idx` (`status_id` ASC),
  INDEX `fk_tasks_performers1_idx` (`performer_id` ASC),
  CONSTRAINT `fk_tasks_users1`
    FOREIGN KEY (`author_id`)
    REFERENCES `taskforce`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_tasks_categories1`
    FOREIGN KEY (`category_id`)
    REFERENCES `taskforce`.`categories` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_tasks_cities1`
    FOREIGN KEY (`city_id`)
    REFERENCES `taskforce`.`cities` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_tasks_statuses1`
    FOREIGN KEY (`status_id`)
    REFERENCES `taskforce`.`statuses` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_tasks_performers1`
    FOREIGN KEY (`performer_id`)
    REFERENCES `taskforce`.`profiles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`responses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`responses` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` DATETIME NOT NULL,
  `text_content` TEXT NULL,
  `price` INT NULL,
  `task_id` INT UNSIGNED NOT NULL,
  `performer_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_responses_tasks1_idx` (`task_id` ASC),
  INDEX `fk_responses_performers1_idx` (`performer_id` ASC),
  CONSTRAINT `fk_responses_tasks1`
    FOREIGN KEY (`task_id`)
    REFERENCES `taskforce`.`tasks` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_responses_performers1`
    FOREIGN KEY (`performer_id`)
    REFERENCES `taskforce`.`profiles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`feedbacks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`feedbacks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` DATETIME NOT NULL,
  `comment` TEXT NULL,
  `evaluation` INT NOT NULL,
  `author_id` INT UNSIGNED NOT NULL,
  `task_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_feedbacks_users1_idx` (`author_id` ASC),
  INDEX `fk_feedbacks_tasks1_idx` (`task_id` ASC),
  CONSTRAINT `fk_feedbacks_users1`
    FOREIGN KEY (`author_id`)
    REFERENCES `taskforce`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_feedbacks_tasks1`
    FOREIGN KEY (`task_id`)
    REFERENCES `taskforce`.`tasks` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`performers_has_categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`performers_has_categories` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `performer_id` INT UNSIGNED NOT NULL,
  `category_id` INT UNSIGNED NOT NULL,
  INDEX `fk_performers_has_categories_categories1_idx` (`category_id` ASC),
  INDEX `fk_performers_has_categories_performers1_idx` (`performer_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_performers_has_categories_performers1`
    FOREIGN KEY (`performer_id`)
    REFERENCES `taskforce`.`profiles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_performers_has_categories_categories1`
    FOREIGN KEY (`category_id`)
    REFERENCES `taskforce`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforce`.`files`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforce`.`files` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `file_url` VARCHAR(2048) NOT NULL,
  `task_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_files_tasks1_idx` (`task_id` ASC),
  CONSTRAINT `fk_files_tasks1`
    FOREIGN KEY (`task_id`)
    REFERENCES `taskforce`.`tasks` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
